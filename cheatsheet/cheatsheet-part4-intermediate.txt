#terminal
rails new intermediate --skip-test-unit


bundle install
rails g rspec:install


rails g model Blog name:string description:text
rails g model Post title:string  content:text blog:references
rails g model Message author:string message:text post:references

rake db:migrate


#user.rb
class User < ActiveRecord::Base
  EMAIL_REGEX = /\A([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]+)\z/i
  validates :first_name, :last_name, presence: true, length: { in: 2..20 }
  validates :email_address, presence: true, uniqueness: { case_sensitive: false }, format: { with: EMAIL_REGEX }
  validates :age, presence: true, numericality: { only_integer: true }
  validates_numericality_of :age, less_than: 150
  validates_numericality_of :age, greater_than: 10
  before_save do
    self.email_address.downcase!
  end
end

#rails c
exit
rails c
reload!

##
Blog.new
Post.new

Blog.create(name: "Coding Inside", description:"How to become a better developer?")
Blog.create(name: "Coding Inside", description:"How to become a zen developer?")
Blog.create(name: "Coding Inside", description:"How to be self-sufficient?")
Blog.create(name: "Coding Inside", description:"How to create responsive layout")
Blog.create(name: "Coding Inside", description:"How to implement group chat using socket.io?")

Blog.first.posts.new
Blog.first.posts.create(title:"Top tips to become better developer", content:"Be consistent, never give up")
Blog.first.posts.create(title:"Good developer vs Bad developer", content:"One works as she can, the other just get thing done.")


Blog.second.posts.create(title:"10 rules-Part1", content:"Programmers are wanted people.")
Blog.second.posts.create(title:"10 rules-Part2", content:"we can say 'No' and we have our lives in our own hands.")

Blog.third.posts.create(title:"10 rules-Part1", content:"Steps 123")
Blog.third.posts.create(title:"10 rules-Part2", content:"we can say 'No'.")

Blog.forth.posts.create(title:"Top tips", content:"fssf")
Blog.forth.posts.create(title:"Top 5 tips", content:"sfsfsf'.")

Blog.last.posts.create(title:"Top 10", content:"Steps 123")
Blog.last.posts.create(title:"Tiger && Fox", content:"we can say 'No'.")

Post.all
Message.new
Post.first.messages.new
Post.first.messages.create(author:"Chiuhua Chen", message: "It's going to be a long journey!")
Post.first.messages.create(author:"Taka Chen", message: "I will support you no matter what.")

Post.second.messages.create(author:"Fox Smith", message: "Good Luck!")
Post.second.messages.create(author:"Taka Chen", message: "I see, I'll give it a try in my dream.")


Post.third.messages.create(author:"Fox Smith", message: "Good Luck!")
Post.third.messages.create(author:"Taka Chen", message: "I see, I'll give it a try in my dream.")

Post.all
Blog.first.posts
Blog.last.posts
Blog.last.posts(title: :desc)
Post.first.update(title: "Top 5 tips")


#post.rb
has_many :messages, :dependent => :delete_all

Post.third.destory


Blog.where("id < ?", 5)
User.where("id > ?", 200) 



Dojo.find(1).destroy
Dojo.destroy_all

Dojo.find(6).ninjas.order(first_name: :desc)
Dojo.find(6).destroy.ninjas.destroy_all
Dojo.find(6).ninjas.destroy_all

